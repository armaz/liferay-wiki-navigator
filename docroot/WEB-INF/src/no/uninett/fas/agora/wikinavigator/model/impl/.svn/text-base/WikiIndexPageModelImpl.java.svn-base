/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package no.uninett.fas.agora.wikinavigator.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import no.uninett.fas.agora.wikinavigator.model.WikiIndexPage;
import no.uninett.fas.agora.wikinavigator.model.WikiIndexPageModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the WikiIndexPage service. Represents a row in the &quot;UN_WikiIndexPage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link no.uninett.fas.agora.wikinavigator.model.WikiIndexPageModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WikiIndexPageImpl}.
 * </p>
 *
 * @author armaz
 * @see WikiIndexPageImpl
 * @see no.uninett.fas.agora.wikinavigator.model.WikiIndexPage
 * @see no.uninett.fas.agora.wikinavigator.model.WikiIndexPageModel
 * @generated
 */
public class WikiIndexPageModelImpl extends BaseModelImpl<WikiIndexPage>
	implements WikiIndexPageModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a wiki index page model instance should use the {@link no.uninett.fas.agora.wikinavigator.model.WikiIndexPage} interface instead.
	 */
	public static final String TABLE_NAME = "UN_WikiIndexPage";
	public static final Object[][] TABLE_COLUMNS = {
			{ "wikiPageId", Types.BIGINT },
			{ "title", Types.VARCHAR },
			{ "order_", Types.INTEGER },
			{ "parentId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table UN_WikiIndexPage (wikiPageId LONG not null primary key,title VARCHAR(200) null,order_ INTEGER,parentId LONG)";
	public static final String TABLE_SQL_DROP = "drop table UN_WikiIndexPage";
	public static final String ORDER_BY_JPQL = " ORDER BY wikiIndexPage.order ASC";
	public static final String ORDER_BY_SQL = " ORDER BY UN_WikiIndexPage.order_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.no.uninett.fas.agora.wikinavigator.model.WikiIndexPage"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.no.uninett.fas.agora.wikinavigator.model.WikiIndexPage"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.no.uninett.fas.agora.wikinavigator.model.WikiIndexPage"),
			true);
	public static long PARENTID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.no.uninett.fas.agora.wikinavigator.model.WikiIndexPage"));

	public WikiIndexPageModelImpl() {
	}

	public long getPrimaryKey() {
		return _wikiPageId;
	}

	public void setPrimaryKey(long primaryKey) {
		setWikiPageId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_wikiPageId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return WikiIndexPage.class;
	}

	public String getModelClassName() {
		return WikiIndexPage.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("wikiPageId", getWikiPageId());
		attributes.put("title", getTitle());
		attributes.put("order", getOrder());
		attributes.put("parentId", getParentId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long wikiPageId = (Long)attributes.get("wikiPageId");

		if (wikiPageId != null) {
			setWikiPageId(wikiPageId);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		Integer order = (Integer)attributes.get("order");

		if (order != null) {
			setOrder(order);
		}

		Long parentId = (Long)attributes.get("parentId");

		if (parentId != null) {
			setParentId(parentId);
		}
	}

	public long getWikiPageId() {
		return _wikiPageId;
	}

	public void setWikiPageId(long wikiPageId) {
		_wikiPageId = wikiPageId;
	}

	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	public void setTitle(String title) {
		_title = title;
	}

	public int getOrder() {
		return _order;
	}

	public void setOrder(int order) {
		_columnBitmask = -1L;

		_order = order;
	}

	public long getParentId() {
		return _parentId;
	}

	public void setParentId(long parentId) {
		_columnBitmask |= PARENTID_COLUMN_BITMASK;

		if (!_setOriginalParentId) {
			_setOriginalParentId = true;

			_originalParentId = _parentId;
		}

		_parentId = parentId;
	}

	public long getOriginalParentId() {
		return _originalParentId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			WikiIndexPage.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WikiIndexPage toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (WikiIndexPage)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		WikiIndexPageImpl wikiIndexPageImpl = new WikiIndexPageImpl();

		wikiIndexPageImpl.setWikiPageId(getWikiPageId());
		wikiIndexPageImpl.setTitle(getTitle());
		wikiIndexPageImpl.setOrder(getOrder());
		wikiIndexPageImpl.setParentId(getParentId());

		wikiIndexPageImpl.resetOriginalValues();

		return wikiIndexPageImpl;
	}

	public int compareTo(WikiIndexPage wikiIndexPage) {
		int value = 0;

		if (getOrder() < wikiIndexPage.getOrder()) {
			value = -1;
		}
		else if (getOrder() > wikiIndexPage.getOrder()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		WikiIndexPage wikiIndexPage = null;

		try {
			wikiIndexPage = (WikiIndexPage)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = wikiIndexPage.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		WikiIndexPageModelImpl wikiIndexPageModelImpl = this;

		wikiIndexPageModelImpl._originalParentId = wikiIndexPageModelImpl._parentId;

		wikiIndexPageModelImpl._setOriginalParentId = false;

		wikiIndexPageModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WikiIndexPage> toCacheModel() {
		WikiIndexPageCacheModel wikiIndexPageCacheModel = new WikiIndexPageCacheModel();

		wikiIndexPageCacheModel.wikiPageId = getWikiPageId();

		wikiIndexPageCacheModel.title = getTitle();

		String title = wikiIndexPageCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			wikiIndexPageCacheModel.title = null;
		}

		wikiIndexPageCacheModel.order = getOrder();

		wikiIndexPageCacheModel.parentId = getParentId();

		return wikiIndexPageCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{wikiPageId=");
		sb.append(getWikiPageId());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", order=");
		sb.append(getOrder());
		sb.append(", parentId=");
		sb.append(getParentId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("no.uninett.fas.agora.wikinavigator.model.WikiIndexPage");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>wikiPageId</column-name><column-value><![CDATA[");
		sb.append(getWikiPageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>order</column-name><column-value><![CDATA[");
		sb.append(getOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentId</column-name><column-value><![CDATA[");
		sb.append(getParentId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = WikiIndexPage.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			WikiIndexPage.class
		};
	private long _wikiPageId;
	private String _title;
	private int _order;
	private long _parentId;
	private long _originalParentId;
	private boolean _setOriginalParentId;
	private long _columnBitmask;
	private WikiIndexPage _escapedModelProxy;
}